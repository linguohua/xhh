// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proxy.proto

package proxy

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageCode int32

const (
	MessageCode_OPInvalid    MessageCode = 0
	MessageCode_OPProxyReply MessageCode = 1
	MessageCode_OPData       MessageCode = 2
	MessageCode_OPPing       MessageCode = 100
	MessageCode_OPPong       MessageCode = 101
)

var MessageCode_name = map[int32]string{
	0:   "OPInvalid",
	1:   "OPProxyReply",
	2:   "OPData",
	100: "OPPing",
	101: "OPPong",
}

var MessageCode_value = map[string]int32{
	"OPInvalid":    0,
	"OPProxyReply": 1,
	"OPData":       2,
	"OPPing":       100,
	"OPPong":       101,
}

func (x MessageCode) Enum() *MessageCode {
	p := new(MessageCode)
	*p = x
	return p
}

func (x MessageCode) String() string {
	return proto.EnumName(MessageCode_name, int32(x))
}

func (x *MessageCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageCode_value, data, "MessageCode")
	if err != nil {
		return err
	}
	*x = MessageCode(value)
	return nil
}

func (MessageCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{0}
}

// 消息包装，把其他消息体格式化为byte array，
// 加上消息码构成一个AccessoryMessage，便于解析
type ProxyMessage struct {
	Ops                  *int32   `protobuf:"varint,1,req,name=Ops" json:"Ops,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=Data" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProxyMessage) Reset()         { *m = ProxyMessage{} }
func (m *ProxyMessage) String() string { return proto.CompactTextString(m) }
func (*ProxyMessage) ProtoMessage()    {}
func (*ProxyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{0}
}
func (m *ProxyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxyMessage.Unmarshal(m, b)
}
func (m *ProxyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxyMessage.Marshal(b, m, deterministic)
}
func (m *ProxyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyMessage.Merge(m, src)
}
func (m *ProxyMessage) XXX_Size() int {
	return xxx_messageInfo_ProxyMessage.Size(m)
}
func (m *ProxyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyMessage proto.InternalMessageInfo

func (m *ProxyMessage) GetOps() int32 {
	if m != nil && m.Ops != nil {
		return *m.Ops
	}
	return 0
}

func (m *ProxyMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ProxyMessage)(nil), "proxy.ProxyMessage")
	proto.RegisterEnum("proxy.MessageCode", MessageCode_name, MessageCode_value)
}

func init() { proto.RegisterFile("proxy.proto", fileDescriptor_700b50b08ed8dbaf) }

var fileDescriptor_700b50b08ed8dbaf = []byte{
	// 146 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0x28, 0xca, 0xaf,
	0xa8, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0x34, 0xb9, 0x78, 0x02,
	0x40, 0x0c, 0xdf, 0xd4, 0xe2, 0xe2, 0xc4, 0xf4, 0x54, 0x21, 0x6e, 0x2e, 0x66, 0xff, 0x82, 0x62,
	0x09, 0x46, 0x05, 0x26, 0x0d, 0x56, 0x21, 0x1e, 0x2e, 0x16, 0x97, 0xc4, 0x92, 0x44, 0x09, 0x26,
	0x05, 0x46, 0x0d, 0x1e, 0xad, 0x20, 0x2e, 0x6e, 0xa8, 0x2a, 0xe7, 0xfc, 0x94, 0x54, 0x21, 0x5e,
	0x2e, 0x4e, 0xff, 0x00, 0xcf, 0xbc, 0xb2, 0xc4, 0x9c, 0xcc, 0x14, 0x01, 0x06, 0x21, 0x01, 0x2e,
	0x1e, 0xff, 0x00, 0xb0, 0x51, 0x41, 0xa9, 0x05, 0x39, 0x95, 0x02, 0x8c, 0x42, 0x5c, 0x5c, 0x6c,
	0xfe, 0x01, 0x20, 0xfd, 0x02, 0x4c, 0x10, 0x76, 0x40, 0x66, 0x5e, 0xba, 0x40, 0x0a, 0x94, 0x9d,
	0x9f, 0x97, 0x2e, 0x90, 0x0a, 0x08, 0x00, 0x00, 0xff, 0xff, 0xac, 0xa9, 0x8c, 0x5b, 0x93, 0x00,
	0x00, 0x00,
}
